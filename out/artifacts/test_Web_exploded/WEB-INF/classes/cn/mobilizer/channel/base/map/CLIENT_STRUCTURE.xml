<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CLIENT_STRUCTURE" >
  <resultMap id="BaseResultMap" type="cn.mobilizer.channel.base.po.ClientStructure" >
    <id column="client_structure_id" property="clientStructureId" jdbcType="INTEGER" />
    <result column="structure_no" property="structureNo" jdbcType="VARCHAR" />
    <result column="structure_name" property="structureName" jdbcType="VARCHAR" />
    <result column="structure_name_en" property="structureNameEn" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="longitude" property="longitude" jdbcType="VARCHAR" />
    <result column="latitude" property="latitude" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="client_id" property="clientId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
  </resultMap>
  
 <resultMap id="TreeNodeResultMap" type="cn.mobilizer.channel.base.vo.TreeNodeVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pId" property="pId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="isParent" property="isParent" jdbcType="VARCHAR" />
    <result column="parentId" property="parentId" jdbcType="INTEGER" />
    <result column="cId" property="cId" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    client_structure_id, structure_no, structure_name, structure_name_en, parent_id, 
    longitude, latitude, remark, client_id, create_time, last_update_time, is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from client_structure
    where client_structure_id = #{clientStructureId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from client_structure
    where client_structure_id = #{clientStructureId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.mobilizer.channel.base.po.ClientStructure" >
    insert into client_structure (client_structure_id, structure_no, structure_name, 
      structure_name_en, parent_id, longitude, 
      latitude, remark, client_id, 
      is_delete
      )
    values (#{clientStructureId,jdbcType=INTEGER}, #{structureNo,jdbcType=VARCHAR}, #{structureName,jdbcType=VARCHAR}, 
      #{structureNameEn,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{longitude,jdbcType=VARCHAR}, 
      #{latitude,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{clientId,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=TINYINT}
      )
  </insert>
  
  <!-- 注意：返回值已经改为插入记录的id值，如果修改会对组织架构树的新增产生影响 -->
  <insert id="insertSelective" parameterType="cn.mobilizer.channel.base.po.ClientStructure" useGeneratedKeys="true" keyProperty="clientStructureId">
    insert into client_structure
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="clientStructureId != null" >
        client_structure_id,
      </if>
      <if test="structureNo != null" >
        structure_no,
      </if>
      <if test="structureName != null" >
        structure_name,
      </if>
      <if test="structureNameEn != null" >
        structure_name_en,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="clientStructureId != null" >
        #{clientStructureId,jdbcType=INTEGER},
      </if>
      <if test="structureNo != null" >
        #{structureNo,jdbcType=VARCHAR},
      </if>
      <if test="structureName != null" >
        #{structureName,jdbcType=VARCHAR},
      </if>
      <if test="structureNameEn != null" >
        #{structureNameEn,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.mobilizer.channel.base.po.ClientStructure" >
    update client_structure
    <set >
      <if test="structureNo != null" >
        structure_no = #{structureNo,jdbcType=VARCHAR},
      </if>
      <if test="structureName != null" >
        structure_name = #{structureName,jdbcType=VARCHAR},
      </if>
      <if test="structureNameEn != null" >
        structure_name_en = #{structureNameEn,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null" >
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where client_structure_id = #{clientStructureId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.mobilizer.channel.base.po.ClientStructure" >
    update client_structure
    set structure_no = #{structureNo,jdbcType=VARCHAR},
      structure_name = #{structureName,jdbcType=VARCHAR},
      structure_name_en = #{structureNameEn,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      longitude = #{longitude,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      client_id = #{clientId,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where client_structure_id = #{clientStructureId,jdbcType=INTEGER}
  </update>

<select id="getAllNodes" parameterType="java.util.Map" resultMap="BaseResultMap">
	SELECT
	tt.*, cs2.client_structure_id,cs2.is_delete
	FROM
	(
	SELECT
	cs1.*
	FROM
	client_structure cs1
	WHERE
	cs1.parent_id IS NULL
	) tt
	LEFT JOIN client_structure cs2 ON tt.client_structure_id = cs2.parent_id
	WHERE
	tt.is_delete = 0
	and cs2.is_delete = 0
</select>

	<select id="getTreeNodesByPId" parameterType="java.util.Map"  resultMap="TreeNodeResultMap">
		<!-- SELECT cs.client_structure_id AS id, cs.parent_id AS pId, cs.structure_name AS name ,IFNULL(parent_id,'true') AS isParent -->
		SELECT cs.client_structure_id AS id, cs.parent_id AS pId, cs.structure_name AS name 
		FROM client_structure cs
		WHERE 1=1 
			<if test="clientId != null" >
				and  cs.client_id = #{clientId}
			</if>
			
			<if test="id &gt; 0" >
				and  cs.parent_id = #{id} 
			</if>
			<if test="id == 0" >
				and  cs.parent_id is null 
			</if>
		AND cs.is_delete = 0
		ORDER BY cs.client_structure_id
	</select>

	<select id="getTreeNodeWithPer" parameterType="java.util.Map"  resultMap="TreeNodeResultMap">
		SELECT cs.client_structure_id AS id, cs.parent_id AS pId, cs.structure_name AS name 
		FROM client_structure cs
		WHERE 1=1 
			<if test="clientId != null" >
				and  cs.client_id = #{clientId}
			</if>
			
			<if test="id &gt; 0" >
				and  cs.parent_id = #{id} 
			</if>
			<if test="id == 0" >
				and  cs.parent_id is null 
			</if>
		AND cs.is_delete = 0
		AND FIND_IN_SET(cs.client_structure_id,#{dataPermissions})>0 
		ORDER BY cs.client_structure_id
	</select>
	
	<select id="getTreeNodeWithSle" parameterType="java.util.Map"  resultMap="TreeNodeResultMap">
		SELECT cs.client_structure_id AS id, cs.parent_id AS pId, cs.structure_name AS name 
		FROM client_structure cs
		WHERE 1=1 
			<if test="clientId != null" >
				and  cs.client_id = #{clientId}
			</if>
			
			<if test="id &gt; 0" >
				and  cs.parent_id = #{id} 
			</if>
			<if test="id == 0" >
				and  cs.parent_id is null 
			</if>
		AND cs.is_delete = 0
		AND FIND_IN_SET(cs.client_structure_id,#{subClientStructureIds})>0 
		ORDER BY cs.client_structure_id
	</select>
	
	<select id="getTopStructure" resultMap="BaseResultMap" parameterType="java.lang.Integer">
	    select * from client_structure where parent_id is null and is_delete = 0 and client_id = #{clientId,jdbcType=INTEGER}  
	</select>
	
  <select id="selectByPrimaryKeyWhithParent" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	SELECT
	cs1.*, cs2.structure_name AS parentStructureName
	FROM
	client_structure cs1
	LEFT JOIN client_structure cs2 ON cs1.parent_id = cs2.client_structure_id
	WHERE
	cs1.client_structure_id = #{clientStructureId,jdbcType=INTEGER}
 </select>
	
	<sql id="select_by_param">
		select
		<include refid="Base_Column_List" />
		from client_structure
		where 1=1
		<include refid="Base_Query_Column_List" />
	</sql>
	
	<sql id="Base_Query_Column_List">
		<if test="structureName != null and structureName != ''">
			and structure_name = #{structureName}
		</if>
		<if test="clientId != null and clientId !=''">
			and client_id = #{clientId}
		</if>
		<if test="isDelete != null">
			and is_delete = #{isDelete}
		</if>
		<if test="isDelete == null">
			and is_delete = 0
		</if>
	</sql>
	
	<select id="selectByParams" parameterType="java.util.Map" resultMap="BaseResultMap">
		<include refid="select_by_param" />
		<include refid="basic.mysqlPageSearchFoot"/>  
	</select>
	
	<select id="selectSubStructrue" parameterType="java.util.Map" resultType="java.lang.String">
		select fn_get_struct_child(#{structureId})
	</select>
	
	<select id="selectParentStructrue" parameterType="java.lang.Integer" resultType="java.lang.String">
		select fn_get_structure_parent(#{structureId})
	</select>
	
	<select id="getDataTreeNode" parameterType="java.util.Map"  resultMap="TreeNodeResultMap">
		SELECT cs.client_structure_id AS id, cs.parent_id AS pId, cs.structure_name AS name,
			CASE WHEN crdp.privilege_id IS NOT NULL THEN 'true' ELSE 'false' END AS checked
		FROM client_structure cs 
		LEFT JOIN client_roles_data_privileges crdp ON cs.client_structure_id = crdp .client_structure_id
		AND crdp.is_delete = 0 AND crdp.role_id = #{roleId}
		WHERE cs.client_id = #{clientId} 
		AND cs.is_delete = 0
		ORDER BY cs.client_structure_id
  </select>
  
  <select id="findClientStructureByName" parameterType="java.util.Map"  resultMap="BaseResultMap">
  	select * from client_structure where is_delete = 0 and client_id = #{clientId} and structure_name  = #{name} LIMIT 0,1
  </select>
  
  <select id="getClientStructureMapByName" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select * from client_structure a where a.is_delete = 0 and a.client_id = #{clientId}
  </select>
  
  <select id="getParentStructureById" parameterType="java.lang.Integer" resultType="java.lang.String">
  	select a.parent_id from client_structure a where a.client_structure_id= #{id} and a.is_delete = 0 LIMIT 1
  </select>
  
  <select id="getStructureByParentId" parameterType="java.util.Map" resultMap="BaseResultMap" >
	select * from client_structure where client_id = #{clientId} and is_delete = 0 and parent_id in
	<foreach item="item" index="index" collection="parentIds" open="(" separator="," close=")">  
  		#{item}  
 	</foreach>
	
  </select>
  
  
  
  <select id="getStructureByClientId" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select a.client_structure_id,a.structure_name from client_structure a where a.is_delete = 0 and a.client_id = #{clientId}
  </select>
  
  
  <select id="getStructureBy_parentId" parameterType="java.util.Map" resultMap="BaseResultMap">
SELECT * FROM client_structure a WHERE a.is_delete = 0 AND a.client_id = #{clientId} AND 
 a.parent_id= any(SELECT client_structure_id FROM client_structure WHERE structure_name =#{structurename} AND client_id=#{clientId}  )
  </select>
   <select id="getStructure_parentId" parameterType="java.util.Map" resultType="Integer">
	SELECT client_structure_id FROM client_structure WHERE structure_name =#{structurename} AND client_id=#{clientId} 
 
  </select>
  
</mapper>