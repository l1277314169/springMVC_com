<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CLIENT_ROLES_PRIVILEGES" >
  <resultMap id="BaseResultMap" type="cn.mobilizer.channel.systemManager.po.ClientRolesPrivileges" >
    <id column="mapping_id" property="mappingId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="client_privilege_id" property="clientPrivilegeId" jdbcType="INTEGER" />
    <result column="client_id" property="clientId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    mapping_id, role_id, client_privilege_id, client_id,
    is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from client_roles_privileges
    where mapping_id = #{mappingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from client_roles_privileges
    where mapping_id = #{mappingId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.mobilizer.channel.systemManager.po.ClientRolesPrivileges" >
    insert into client_roles_privileges (mapping_id, role_id, client_privilege_id, 
      client_id, 
      is_delete)
    values (#{mappingId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{clientPrivilegeId,jdbcType=INTEGER}, 
      #{clientId,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.mobilizer.channel.systemManager.po.ClientRolesPrivileges" >
    insert into client_roles_privileges
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mappingId != null" >
        mapping_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="clientPrivilegeId != null" >
        client_privilege_id,
      </if>
      <if test="clientId != null" >
        client_id,
      </if>
     
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mappingId != null" >
        #{mappingId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="clientPrivilegeId != null" >
        #{clientPrivilegeId,jdbcType=INTEGER},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=INTEGER},
      </if>
    
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.mobilizer.channel.systemManager.po.ClientRolesPrivileges" >
    update client_roles_privileges
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="clientPrivilegeId != null" >
        client_privilege_id = #{clientPrivilegeId,jdbcType=INTEGER},
      </if>
      <if test="clientId != null" >
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
      
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where mapping_id = #{mappingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.mobilizer.channel.systemManager.po.ClientRolesPrivileges" >
    update client_roles_privileges
    set role_id = #{roleId,jdbcType=INTEGER},
      client_privilege_id = #{clientPrivilegeId,jdbcType=INTEGER},
      client_id = #{clientId,jdbcType=INTEGER},
     
      is_delete = #{isDelete,jdbcType=TINYINT}
    where mapping_id = #{mappingId,jdbcType=INTEGER}
  </update>
  
  <update id="deleteByRoleId" parameterType="java.lang.Integer">
    update client_roles_privileges
    set is_delete = 1
    where role_id = #{roleId}
  </update>
  
  <update id="deleteByRoleAndPrivileges" parameterType="java.util.Map">
    update client_roles_privileges
    set is_delete = 1
    where role_id = #{roleId} 
    and find_in_set(client_privilege_id,#{delPrivileges})>0
  </update>
  
  <insert id="insertByRoleAndPrivileges"  parameterType="java.util.Map">
    insert into client_roles_privileges (role_id,client_privilege_id, client_id)
    values 
    <foreach collection="insPrivileges" item="item" index="index" separator="," >
    	(#{roleId},#{item},#{clientId}) 
    </foreach>
  </insert>
  
  <select id="findClientRolesPrivilegesByCode" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select * from client_roles_privileges crp 
  	inner join client_privileges cp on crp.client_privilege_id = cp.client_privilege_id
  	where crp.client_id = #{clientId} and cp.client_id = #{clientId} and crp.is_delete = 0 and cp.is_delete = 0
  	and crp.role_id = #{roleId} and cp.priv_code = #{privCode} limit 1 
  </select>
  
</mapper>