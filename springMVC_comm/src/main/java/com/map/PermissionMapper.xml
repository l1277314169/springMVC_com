<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.PermissionDao" >
  <resultMap id="BaseResultMap" type="com.po.Permission" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="permission" property="permission" jdbcType="VARCHAR" />
    <result column="parentid" property="parentid" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, url, permission, parentid, description
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.po.Permission" >
    insert into permission (id, url, permission, 
      parentid, description)
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{permission,jdbcType=VARCHAR}, 
      #{parentid,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.po.Permission" >
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="permission != null" >
        permission,
      </if>
      <if test="parentid != null" >
        parentid,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.po.Permission" >
    update permission
    <set >
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        parentid = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.po.Permission" >
    update permission
    set url = #{url,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      parentid = #{parentid,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findPermissionList" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select p.url,p.description,p.permission  from user u
    LEFT JOIN user_role ur on u.id=ur.user_id
    LEFT JOIN  role_permission rp on ur.role_id =rp.role_id
    LEFT JOIN permission p on rp.permission_id= p.id
    where u.id  = #{id,jdbcType=INTEGER}
  </select>

  <select id="findUrlList" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select p.url,p.description,p.permission  from user u
    LEFT JOIN user_role ur on u.id=ur.user_id
    LEFT JOIN  role_permission rp on ur.role_id =rp.role_id
    LEFT JOIN permission p on rp.permission_id= p.id
    where u.id  = #{id,jdbcType=INTEGER} and p.url is not null
  </select>
</mapper>