<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="SPECIAL_TASK" >
  <resultMap id="BaseResultMap" type="cn.mobilizer.channel.specialTask.po.SpecialTask" >
    <id column="special_task_id" property="specialTaskId" jdbcType="CHAR" />
    <result column="special_task_name" property="specialTaskName" jdbcType="VARCHAR" />
    <result column="object_type" property="objectType" jdbcType="TINYINT" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
    <result column="task_priority" property="taskPriority" jdbcType="TINYINT" />
    <result column="publisher" property="publisher" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="client_id" property="clientId" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="submit_time" property="submitTime" jdbcType="TIMESTAMP" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    special_task_id, special_task_name, object_type, start_date, end_date, task_priority, 
    publisher, remark, client_id, create_by, create_time, submit_time, last_update_time, 
    is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from special_task
    where special_task_id = #{specialTaskId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from special_task
    where special_task_id = #{specialTaskId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="cn.mobilizer.channel.specialTask.po.SpecialTask" >
    insert into special_task (special_task_id, special_task_name, object_type, 
      start_date, end_date, task_priority, 
      publisher, remark, client_id, 
      create_by, create_time, submit_time, 
      last_update_time, is_delete)
    values (#{specialTaskId,jdbcType=CHAR}, #{specialTaskName,jdbcType=VARCHAR}, #{objectType,jdbcType=TINYINT}, 
      #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, #{taskPriority,jdbcType=TINYINT}, 
      #{publisher,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{clientId,jdbcType=INTEGER}, 
      #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{submitTime,jdbcType=TIMESTAMP}, 
      #{lastUpdateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.mobilizer.channel.specialTask.po.SpecialTask" useGeneratedKeys="true" keyProperty="specialTaskId">
    insert into special_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="specialTaskId != null" >
        special_task_id,
      </if>
      <if test="specialTaskName != null" >
        special_task_name,
      </if>
      <if test="objectType != null" >
        object_type,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="taskPriority != null" >
        task_priority,
      </if>
      <if test="publisher != null" >
        publisher,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="submitTime != null" >
        submit_time,
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="specialTaskId != null" >
        #{specialTaskId,jdbcType=CHAR},
      </if>
      <if test="specialTaskName != null" >
        #{specialTaskName,jdbcType=VARCHAR},
      </if>
      <if test="objectType != null" >
        #{objectType,jdbcType=TINYINT},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="taskPriority != null" >
        #{taskPriority,jdbcType=TINYINT},
      </if>
      <if test="publisher != null" >
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitTime != null" >
        #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null" >
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.mobilizer.channel.specialTask.po.SpecialTask" >
    update special_task
    <set >
      <if test="specialTaskName != null" >
        special_task_name = #{specialTaskName,jdbcType=VARCHAR},
      </if>
      <if test="objectType != null" >
        object_type = #{objectType,jdbcType=TINYINT},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="taskPriority != null" >
        task_priority = #{taskPriority,jdbcType=TINYINT},
      </if>
      <if test="publisher != null" >
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null" >
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitTime != null" >
        submit_time = #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where special_task_id = #{specialTaskId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.mobilizer.channel.specialTask.po.SpecialTask" >
    update special_task
    set special_task_name = #{specialTaskName,jdbcType=VARCHAR},
      object_type = #{objectType,jdbcType=TINYINT},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      task_priority = #{taskPriority,jdbcType=TINYINT},
      publisher = #{publisher,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      client_id = #{clientId,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      submit_time = #{submitTime,jdbcType=TIMESTAMP},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where special_task_id = #{specialTaskId,jdbcType=CHAR}
  </update>
  <select id="selectSpecialTask" parameterType="java.util.Map" resultType="cn.mobilizer.channel.specialTask.vo.SpecialTaskVO">
  	SELECT
	st.special_task_id as specialTaskId,
	st.object_type as objectType,
	st.special_task_name as specialTaskName,
	st.start_date as startDate,
	st.end_date as endDate,
	st.publisher as publisher,
	st.create_by as clientUserId,
	stp.client_position_id  as clientPositionId,
	st.client_id as clientId,
	count(DISTINCT sto.object_id) as total,
	count(DISTINCT std.pop_id) as perform
	FROM
	special_task st
	INNER JOIN special_task_object sto ON sto.special_task_id = st.special_task_id
	AND sto.is_delete = 0
	AND sto.client_id = #{clientId}
	LEFT JOIN special_task_data std ON std.special_task_id = st.special_task_id and std.pop_id = sto.object_id
	AND std.is_delete = 0
	AND std.client_id = #{clientId}
	LEFT JOIN special_task_position_mapping stp on stp.special_task_id = st.special_task_id  
	AND stp.is_delete = 0
	AND stp.client_id = #{clientId}
	WHERE
	1 = 1
	AND st.create_by = #{clientUserId}
	GROUP BY
	st.special_task_id
  </select>

<select id="selectSpecialTaskVOByParameter" parameterType="java.util.Map" resultType="cn.mobilizer.channel.specialTask.vo.SpecialTaskVO">
	SELECT 
	st.special_task_id as specialTaskId,
	st.object_type as objectType,
	st.special_task_name as specialTaskName,
	st.start_date as startDate,
	st.end_date as endDate,
	st.publisher as publisher,
	st.create_by as createBy,
	st.client_id as clientId,
	stpm.client_position_id as clientPositionId,
	GROUP_CONCAT(sto.object_id) as objectIds 
	FROM 
	special_task st 
	LEFT JOIN special_task_position_mapping stpm on stpm.special_task_id = st.special_task_id and stpm.is_delete = 0 and stpm.client_id = #{clientId}
	LEFT JOIN special_task_object sto on sto.special_task_id = st.special_task_id and sto.is_delete = 0 and sto.client_id = #{clientId}
	where 1=1 and st.is_delete = 0  and st.client_id = #{clientId} and st.special_task_id = #{specialTaskId}
	GROUP BY st.special_task_id
</select>
</mapper>