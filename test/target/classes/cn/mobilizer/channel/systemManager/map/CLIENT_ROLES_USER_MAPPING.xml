<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CLIENT_ROLES_USER_MAPPING" >
  <resultMap id="BaseResultMap" type="cn.mobilizer.channel.systemManager.po.ClientRolesUserMapping" >
    <id column="mapping_id" property="mappingId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="client_user_id" property="clientUserId" jdbcType="INTEGER" />
    <result column="client_id" property="clientId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    mapping_id, role_id, client_user_id, client_id,  is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from client_roles_user_mapping
    where mapping_id = #{mappingId,jdbcType=INTEGER}
  </select>
  
  
  <select id="selectByPrimaryKeyRoles" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
   mg.*,cs.role_name as name
    from client_roles_user_mapping mg
    left join client_roles cs on cs.role_id=mg.role_id
    where mg.client_user_id = #{clientUserId,jdbcType=INTEGER} and mg.is_delete=0 and cs.is_delete=0
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from client_roles_user_mapping
    where mapping_id = #{mappingId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.mobilizer.channel.systemManager.po.ClientRolesUserMapping" >
    insert into client_roles_user_mapping (mapping_id, role_id, client_user_id, 
      client_id, 
      is_delete)
    values (#{mappingId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{clientUserId,jdbcType=INTEGER}, 
      #{clientId,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.mobilizer.channel.systemManager.po.ClientRolesUserMapping" >
    insert into client_roles_user_mapping
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mappingId != null" >
        mapping_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="clientUserId != null" >
        client_user_id,
      </if>
      <if test="clientId != null" >
        client_id,
      </if>
   
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mappingId != null" >
        #{mappingId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="clientUserId != null" >
        #{clientUserId,jdbcType=INTEGER},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=INTEGER},
      </if>
   
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.mobilizer.channel.systemManager.po.ClientRolesUserMapping" >
    update client_roles_user_mapping
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="clientUserId != null" >
        client_user_id = #{clientUserId,jdbcType=INTEGER},
      </if>
      <if test="clientId != null" >
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
     
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where mapping_id = #{mappingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.mobilizer.channel.systemManager.po.ClientRolesUserMapping" >
    update client_roles_user_mapping
    set role_id = #{roleId,jdbcType=INTEGER},
      client_user_id = #{clientUserId,jdbcType=INTEGER},
      client_id = #{clientId,jdbcType=INTEGER},
     
      is_delete = #{isDelete,jdbcType=TINYINT}
    where mapping_id = #{mappingId,jdbcType=INTEGER}
  </update>
  
  <update id="updateIsdelete" parameterType="java.lang.Integer">
   update client_roles_user_mapping set is_delete=1 where client_user_id=#{clientUserId}
  
  </update>
  
  <select id="selectClientRolesUserMapping" resultMap="BaseResultMap" parameterType="java.util.Map">
  select * from client_roles_user_mapping where role_id=#{roleId} and client_user_id=#{clientUserId} 
  </select>
  
  <select id="cleintRolesByClientUserId" resultMap="BaseResultMap" parameterType="java.util.Map">
  	select cg.*,cs.role_name as name from client_roles_user_mapping cg
  	left join client_roles cs on cs.role_id=cg.role_id and cs.is_delete = 0
  	where cg.is_delete = 0 and cg.client_user_id=#{clientUserId} and cg.client_id=#{clientId}
  </select>
  
  <select id="getClientRolesUserMappingByRoleId" resultMap="BaseResultMap" parameterType="java.util.Map">
  	select crum.* from client_roles_user_mapping crum
  	where 1=1 
  	<if test="clientId != null">
  		and crum.client_id = #{clientId}
  	</if>
  	<if test="roleId != null">
  		and crum.role_id = #{roleId}
  	</if>
  </select>
  
  <insert id="insertList" parameterType="java.util.List">
  	insert into client_roles_user_mapping (role_id, client_user_id, 
      client_id) values 
      <foreach collection="list" index="index" item="item" separator=",">
      (#{item.roleId},#{item.clientUserId},#{item.clientId})
      </foreach>
  </insert>
  
  
   <insert id="insertGZRZList" parameterType="java.util.List">
  	insert into client_roles_user_mapping (role_id, client_user_id, 
      client_id) values 
      <foreach collection="list" index="index" item="item" separator=",">
      (71,#{item},8)
      </foreach>
  </insert>
  
</mapper>